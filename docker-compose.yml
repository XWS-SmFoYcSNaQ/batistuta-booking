version: "3.8"

services:
  api_gateway:
    image: api_gateway
    container_name: api_gateway
    hostname: api_gateway
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    restart: always
    environment:
      ACCOMMODATION_SERVICE_ADDRESS: accommodation_service${ACCOMMODATION_SERVICE_ADDRESS}
      BOOKING_SERVICE_ADDRESS: booking_service${BOOKING_SERVICE_ADDRESS}
      USER_SERVICE_ADDRESS: user_service${USER_SERVICE_ADDRESS}
      AUTH_SERVICE_ADDRESS: auth_service${AUTH_SERVICE_ADDRESS}
      GATEWAY_ADDRESS: ${GATEWAY_ADDRESS}
    depends_on:
      - accommodation_service
      - booking_service
    ports:
      - "11000:11000"

  accommodation_service:
    image: accommodation_service
    container_name: accommodation_service
    hostname: accommodation_service
    build:
      context: accommodation-service/
      dockerfile: Dockerfile
    restart: always
    environment:
      ACCOMMODATION_SERVICE_ADDRESS: ${ACCOMMODATION_SERVICE_ADDRESS}
      AUTH_SERVICE_ADDRESS: auth_service${AUTH_SERVICE_ADDRESS}
      ACCOMMODATION_DATABASE_ADDRESS: accommodation_database:5432
      ACCOMMODATION_DATABASE_USERNAME: ${ACCOMMODATION_DATABASE_USERNAME}
      ACCOMMODATION_DATABASE_PASSWORD: ${ACCOMMODATION_DATABASE_PASSWORD}
    depends_on:
      - accommodation_database

  accommodation_database:
    image: postgres:15.0-alpine
    container_name: accommodation_database
    hostname: accommodation_database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '12102:5432'
    restart: always

  booking_service:
    image: booking_service
    container_name: booking_service
    hostname: booking_service
    build:
      context: booking-service/
      dockerfile: Dockerfile
    restart: always
    environment:
      BOOKING_SERVICE_ADDRESS: ${BOOKING_SERVICE_ADDRESS}
      BOOKING_DATABASE_ADDRESS: booking_database:5432
      BOOKING_DATABASE_USERNAME: ${BOOKING_DATABASE_USERNAME}
      BOOKING_DATABASE_PASSWORD: ${BOOKING_DATABASE_PASSWORD}
    depends_on:
      - booking_database

  booking_database:
    image: postgres:15.0-alpine
    container_name: booking_database
    hostname: booking_database
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '12103:5432'
    restart: always

  user_service:
    image: user_service
    container_name: user_service
    hostname: user_service
    build:
      context: ./user-service
      dockerfile: user-service\Dockerfile
    restart: always
    environment:
      USER_SERVICE_ADDRESS: ${USER_SERVICE_ADDRESS}
      MySqlConfig__Server: ${USER_DATABASE_SERVER}
      MySqlConfig__Port: ${USER_DATABASE_PORT}
      MySqlConfig__Database: ${USER_DATABASE}
      MySqlConfig__User: ${USER_DATABASE_USERNAME}
      MySqlConfig__Password: ${USER_DATABASE_PASSWORD}
    depends_on:
      - user_database

  user_database:
    image: mysql:5.7
    container_name: user_database
    hostname: user_database
    environment:
      MYSQL_ROOT_PASSWORD: ${USER_DATABASE_PASSWORD}
      MYSQL_DATABASE: UserServiceDb
    ports:
      - '12101:3306'
    volumes:
      - user_database-mysql-data:/var/lib/mysql
    restart: always

  auth_service:
    image: auth_service
    container_name: auth_service
    hostname: auth_service
    build:
      context: ./auth-service
      dockerfile: auth-service\Dockerfile
    environment:
      AUTH_SERVICE_ADDRESS: ${AUTH_SERVICE_ADDRESS}
      Services__USER_SERVICE_ADDRESS: user_service${USER_SERVICE_ADDRESS}
    restart: always
    depends_on:
      - user_service

  # public_app:
  #   image: public_app
  #   container_name: public_app
  #   hostname: public_app
  #   build:
  #     context: ./public-app/.
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   restart: always
  #   depends_on:
  #     - api_gateway

volumes:
  user_database-mysql-data:
