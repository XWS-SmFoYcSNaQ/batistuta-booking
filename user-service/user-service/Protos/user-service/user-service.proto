syntax = "proto3";

option csharp_namespace = "user_service";

package user;

// The user service definition.
service UserService {
  rpc RegisterUser (RegisterUser_Request) returns (RegisterUser_Response);
  rpc GetAllUsers (Empty_Message) returns (GetAllUsers_Response);
  rpc VerifyUserPassword (VerifyUser_Request) returns (VerifyUser_Response);
  rpc ChangeUserInfo(ChangeUserInfo_Request) returns(ChangeUserInfo_Response);
  rpc ChangePassword(ChangePassword_Request) returns(Empty_Message);
  rpc GetAllHostsWithRatings(Empty_Message) returns (GetAllHostsWithRatings_Response);
}

enum UserRole {
    Host = 0;
    Guest = 1;
};

message Empty_Message {

}

message Error {
  string PropertyName = 1; 
  string ErrorMessage = 2;
}

message User {
  string Id = 1;
  UserRole Role = 2;
  string Username = 3;
  string FirstName = 4;
  string LastName = 5;
  string Email = 6;
  string LivingPlace = 7;
}



message UserLessInfo {
  UserRole Role = 1;
  string Username = 2;
  string FirstName = 3;
  string LastName = 4;
  string Email = 5;
  string LivingPlace = 6;
}

message RegisterUser_Request {
  UserRole Role = 1;
  string Username = 2;
  string Password = 3;
  string FirstName = 4;
  string LastName = 5;
  string Email = 6;
  string LivingPlace = 7;
}

message RegisterUser_Response {
  bool Success = 1;
  string Message = 2;
  repeated Error Errors = 3;
  User User = 4;
}

message GetAllUsers_Response {
  repeated User Users = 1;
}

message VerifyUser_Request {
  string Username = 1;
  string Password = 2;
}

message VerifyUser_Response {
  bool Verified = 1;
  string ErrorMessage = 2;
  User User = 3;
}

message ChangeUserInfo_Request {
  optional string FirstName = 1;
  optional string LastName = 2;
  optional string LivingPlace = 3;
  string Username = 4;
}

message ChangeUserInfo_Response {
  bool Success = 1;
  string ErrorMessage = 2;
  optional UserLessInfo User = 3;
}

message ChangePassword_Request {
  string CurrentPassword = 1;
  string NewPassword = 2;
}

message RatingDTO {
  string Id = 1;
  string UserId = 2;
  string TargetId = 3;
  uint32 TargetType = 4;
  uint32 Value = 5;
}

message HostWithRating {
  string Id = 1;
  UserRole Role = 2;
  string Username = 3;
  string FirstName = 4;
  string LastName = 5;
  string Email = 6;
  string LivingPlace = 7;
  repeated RatingDTO Ratings = 8;
}

message GetAllHostsWithRatings_Response {
  repeated HostWithRating Hosts = 1;
}